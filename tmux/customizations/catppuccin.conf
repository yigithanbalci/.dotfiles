# set -g @catppuccin_window_text ' #(bash -lc "git -C \"#{pane_current_path}\" rev-parse --show-toplevel 2>/dev/null | xargs -n1 basename || basename \"#{pane_current_path}\"")'
# set -g @catppuccin_window_current_text ' #(bash -lc "git -C \"#{pane_current_path}\" rev-parse --show-toplevel 2>/dev/null | xargs -n1 basename || basename \"#{pane_current_path}\"")'
# set -g status-right "#{E:@catppuccin_status_application}#{E:@catppuccin_status_session}"
# set -g status-left ""

# Show git repo name if inside one, else last path part, with $HOME â†’ ~
set -g @catppuccin_window_text ' #(
  repo=$(git -C "#{pane_current_path}" rev-parse --show-toplevel 2>/dev/null)
  if [ -n "$repo" ]; then
    basename "$repo"
  elif [ "#{pane_current_path}" = "$HOME" ]; then
    echo "~"
  else
    basename "#{pane_current_path}"
  fi
)'

set -g @catppuccin_window_current_text ' #(
  repo=$(git -C "#{pane_current_path}" rev-parse --show-toplevel 2>/dev/null)
  if [ -n "$repo" ]; then
    basename "$repo"
  elif [ "#{pane_current_path}" = "$HOME" ]; then
    echo "~"
  else
    basename "#{pane_current_path}"
  fi
)'

# Set window text to display the application name or current path
set -g @catppuccin_window_text '#(
  if [ -n "#{pane_current_command}" ]; then
    echo "#{pane_current_command}"
  elif [ -n "#{pane_current_path}" ]; then
    basename "#{pane_current_path}"
  else
    echo "unknown"
  fi
)'

# Set current window text to display the application name or current path
set -g @catppuccin_window_current_text '#(
  if [ -n "#{pane_current_command}" ]; then
    echo "#{pane_current_command}"
  elif [ -n "#{pane_current_path}" ]; then
    basename "#{pane_current_path}"
  else
    echo "unknown"
  fi
)'
# set -g @catppuccin_window_status_style basic
set -g status-right "#{E:@catppuccin_status_application}#{E:@catppuccin_status_session}#{E:@catppuccin_date_time}"
set -g status-left ""
