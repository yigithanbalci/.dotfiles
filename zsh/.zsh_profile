# c/c++ compiler settings
export CC=clang
export CXX=clang++
# export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
# export  LDFLAGS="-L/opt/homebrew/opt/llvm/lib/unwind -lunwind"
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib -L/opt/homebrew/opt/llvm/lib/c++ -L/opt/homebrew/opt/llvm/lib/unwind -lunwind"
export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

# program settings
export JAVA_HOME=/opt/homebrew/Cellar/openjdk/23
export STARSHIP_CONFIG=$HOME/.config/starship/starship.toml

# env var path 
addToPath /usr/local/bin
addToPath /usr/local/go/bin
addToPath $HOME/.local/bin
addToPath $HOME/.local/scripts/
#needed for some vars for rust
#. "$HOME/.cargo/env"
addToPath $HOME/.cargo/bin
addToPath $HOME/go/bin
addToPath $HOME/.config/emacs/bin
addToPath /opt/homebrew/opt/llvm/bin
addToPath $JAVA_HOME/bin
addToPath $HOME/programs/flutter/bin/

# os specific tasks
osSpecificTasks() {
  # Detect the operating system
  OS_NAME=$(uname -s)
  # Check if the OS is macOS
  if [ "$OS_NAME" = "Darwin" ]; then
    # Add the Homebrew setup command here
    addToPath /opt/homebrew/bin
    #LLVM 
    addToPath /opt/homebrew/opt/llvm/bin
    eval "$(/opt/homebrew/bin/brew shellenv)"
  else
    # Add commands for other operating systems if needed
  fi
}

osSpecificTasks

source <(fzf --zsh)

# Some useful keybindings to use my custom scripts or zsh features
bindkey -v
#bindkey -ar '^f' #unbinds 
bindkey -s '^f' "tmux-sessionizer\n"

# BEGIN opam configuration
# This is useful if you're using opam as it adds:
#   - the correct directories to the PATH
#   - auto-completion for the opam binary
# This section can be safely removed at any time if needed.
[[ ! -r "$HOME/.opam/opam-init/init.zsh" ]] || source "$HOME/.opam/opam-init/init.zsh" > /dev/null 2> /dev/null
# END opam configuration

alias emacs='emacsclient -c -a ""'
alias jvim="nvim --cmd 'set runtimepath^=$HOME/.config/jvim'"

# Vim alias to open nvim 
# alias vim='nvim'
# NOTE: if you don't want following 
# you can run: "command vim" to run vim instead of alias
# alias realvim="$(which vim)"

vim() {
  if [[ "$1" == "--real" ]]; then
    shift
    command vim "$@"
  elif command -v nvim >/dev/null 2>&1; then
    command nvim "$@"
  else
    command vim "$@"
  fi
}

# Git Aliases
alias gitlog='git log --oneline --graph --decorate --all'
alias gitrebase='git rebase --interactive --autostash --keep-empty --no-autosquash --rebase-merges'
gitprune() {
    git fetch -p
    git remote prune origin
    git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
}

#this does not work somehow, probably need to eval zoxide
eval "$(zoxide init zsh)"
cd() {
  if command -v z >/dev/null 2>&1; then
    z "$@"
    if [ $? -ne 0 ]; then
      builtin cd "$@"
    fi
  else
    builtin cd "$@"
  fi
}
